#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Pre-Hand-In
\begin_inset Newline newline
\end_inset

42137 Optimization using Metaheuristics
\end_layout

\begin_layout Author
Jaspur Højgaard - s072069
\begin_inset Newline newline
\end_inset

Rasmus Bo Sørensen - s072080
\begin_inset Newline newline
\end_inset

Mark Ruvald Pedersen - s072095
\end_layout

\begin_layout Section
Problem outline
\end_layout

\begin_layout Standard
Current trends in computing points towards multicore architectures, where
 communication is of great importance.
\end_layout

\begin_layout Standard
Network-on-Chip is a good candidate for solving the communication problem
 in multicore systems.
\end_layout

\begin_layout Itemize
What is network on chip?
\end_layout

\begin_layout Itemize
Why is real time systems important for ...
 something with aircrafts.
 Decoupling of communication channels in the system.
\end_layout

\begin_layout Itemize
In the majority of on chip networks nowadays, communication between different
 pairs of nodes are coupled, due to routing and buffering in the network.
 To decouple communications channels the traffic in the network can be scheduled
 statically at compile time.
\end_layout

\begin_layout Itemize
Generating this kind of schedule is a hard problem to solve, we would like
 to optimize the generation of this static schedule.
\end_layout

\begin_layout Standard
To maintain hard real time properties of the system, communication must
 be statically scheduled.
\end_layout

\begin_layout Standard
The schedule is periodic, and thus for performance reasons (Bandwidth and
 latency) it is important to have a schedule as short as possible.
 We want to optimize for shortest schedule, for a given use-case.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/double-torus.pdf
	lyxscale 20
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
fadhka
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Real time systems communication channels must be decoupled, this decoupling
 can be hand
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/Tile-Details.pdf
	lyxscale 30
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
adffd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tile concept, each tile processor executes one task.
\end_layout

\begin_layout Section
Metaheuristics
\end_layout

\begin_layout Standard
Evolutionary algorithms
\end_layout

\begin_layout Section
Neighbourhoods/Operators
\end_layout

\begin_layout Itemize
Swap the mapping of routes to links.
\end_layout

\begin_layout Itemize
Permute the route between two end nodes of a communication channel.
\end_layout

\begin_layout Section
Implementation language
\end_layout

\begin_layout Standard
C++
\end_layout

\end_body
\end_document
